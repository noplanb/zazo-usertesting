# This references a standard debian container from the
# Docker Hub https://registry.hub.docker.com/_/debian/
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: nginx
# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongodb
    # http://devcenter.wercker.com/docs/services/mongodb.html

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html
build:
    # Steps make up the actions in your pipeline
    # Read more about steps on our dev center:
    # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    - script:
        name: link site
        code: |
          cp -fv public/index.html /usr/share/nginx/html
    - script:
        name: nginx
        code: |
          nginx
    - install-packages:
        packages: curl ruby
    - script:
        name: ps
        code: |
          ps aux | grep nginx
    - script:
        name: health check
        code: |
          curl http://127.0.0.1/
  after-steps:
    - asux/pretty-slack-notify:
        webhook_url: $slack_url
        channel: devops
deploy:
  steps:
    - install-packages:
        packages: ruby python python-pip
    - asux/elastic-beanstalk-deploy:
        key: $AWS_ACCESS_KEY_ID
        secret: $AWS_SECRET_ACCESS_KEY
        app_name: $EB_APP
        env_name: $EB_ENV
        region: $AWS_REGION
        debug: true
  after-steps:
    - asux/pretty-slack-notify:
        webhook_url: $slack_url
        channel: devops
